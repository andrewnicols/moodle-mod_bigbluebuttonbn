{"version":3,"sources":["../src/recordings.js"],"names":["selectors","searchForm","table","initYuiLanguage","Y","stringList","map","key","component","then","first","prev","next","last","goToLabel","goToAction","perPage","showAll","Intl","add","config","lang","catch","formatDates","locale","dateList","row","date","Date","toLocaleDateString","weekday","year","month","day","getFormattedData","response","recordingData","tabledata","rowData","JSON","parse","data","getDataTableFunctions","bbbid","dataTable","updateTableFromResponse","status","get","reset","set","currentFilter","filterByText","refreshTableData","repository","fetchRecordings","value","dataModel","escapedRegex","replace","rsearch","RegExp","filter","asList","item","name","test","description","requestAction","element","elementData","dataset","payload","bigbluebuttonbnid","recordingid","getDataFromAction","dataType","closest","action","requireConfirmation","confirm","M","core","modal","centered","question","Promise","resolve","on","updateRecording","processAction","e","popoutLink","target","preventDefault","videoPlayer","window","open","opener","location","href","clickedLink","iconPromise","getDOMNode","displayException","processSearchSubmission","elements","searchtext","processSearchReset","registerEventListeners","boundingBox","addEventListener","document","querySelector","setupDatatable","recordings_html","showRecordings","profile_features","indexOf","YUI","use","tableData","DataTable","width","columns","rowsPerPage","paginatorLocation","render","init"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport repository from './repository';\nimport {exception as displayException} from 'core/notification';\nimport {get_strings as getStrings} from 'core/str';\nimport {addIconToContainerWithPromise} from 'core/loadingicon';\n\nconst selectors = {\n    searchForm: '#bigbluebuttonbn_recordings_searchform',\n    table: '#bigbluebuttonbn_recordings_table',\n};\n\n    // eslint-disable-next-line\nconst convertFeaturesToMap = profileFeatures => {\n    const mappedFeatures = new Map();\n    for (const feature of profileFeatures) {\n        mappedFeatures.set(feature, true);\n    }\n\n    return mappedFeatures;\n};\n\n/**\n * Initiate the YUI langauge strings with appropriate values for the sortable list from Moodle.\n *\n * @param   {YUI} Y\n * @returns {Promise}\n */\nconst initYuiLanguage = Y => {\n    const stringList = [\n        'view_recording_yui_first',\n        'view_recording_yui_prev',\n        'view_recording_yui_next',\n        'view_recording_yui_last',\n        'view_recording_yui_page',\n        'view_recording_yui_go',\n        'view_recording_yui_rows',\n        'view_recording_yui_show_all',\n    ].map(key => {\n        return {\n            key,\n            component: 'bigbluebuttonbn',\n        };\n    });\n\n    return getStrings(stringList)\n    .then(([first, prev, next, last, goToLabel, goToAction, perPage, showAll]) => {\n        Y.Intl.add('datatable-paginator', Y.config.lang, {\n            first,\n            prev,\n            next,\n            last,\n            goToLabel,\n            goToAction,\n            perPage,\n            showAll,\n        });\n\n        return;\n    })\n    .catch();\n};\n\n/**\n * Format the supplied date per the specified locale.\n *\n * @param   {string} locale\n * @param   {array} dateList\n * @returns {array}\n */\nconst formatDates = (locale, dateList) => dateList.map(row => {\n    const date = new Date(row.date);\n    row.date = date.toLocaleDateString(locale, {\n        weekday: 'long',\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n    });\n\n    return row;\n});\n\n/**\n * Format response data for the table.\n *\n * @param   {string} response JSON-encoded table data\n * @returns {array}\n */\nconst getFormattedData = response => {\n    const recordingData = response.tabledata;\n    let rowData = JSON.parse(recordingData.data);\n\n    rowData = formatDates(recordingData.locale, rowData);\n\n    return rowData;\n};\n\nconst getDataTableFunctions = (bbbid, dataTable) => {\n    const updateTableFromResponse = response => {\n        if (!response || !response.status) {\n            // There was no output at all.\n            return;\n        }\n\n        dataTable.get('data').reset(getFormattedData(response));\n        dataTable.set(\n            'currentData',\n            dataTable.get('data')\n        );\n\n        const currentFilter = dataTable.get('currentFilter');\n        if (currentFilter) {\n            filterByText(currentFilter);\n        }\n\n        return;\n    };\n\n    const refreshTableData = bbbid => repository.fetchRecordings(bbbid).then(updateTableFromResponse);\n\n    const filterByText = value => {\n        const dataModel = dataTable.get('currentData');\n        dataTable.set('currentFilter', value);\n\n        const escapedRegex = value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n        const rsearch = new RegExp(`<span>.*?${escapedRegex}.*?</span>`, 'i');\n\n        dataTable.set('data', dataModel.filter({asList: true}, item => {\n            const name = item.get('recording');\n            if (name && rsearch.test(name)) {\n                return true;\n            }\n\n            const description = item.get('description');\n            if (description && rsearch.test(description)) {\n                return true;\n            }\n\n            return false;\n        }));\n    };\n\n    const requestAction = (element) => {\n        const getDataFromAction = (element, dataType) => element.closest(`[data-${dataType}]`).dataset[dataType];\n\n        const elementData = element.dataset;\n        const payload = {\n            bigbluebuttonbnid: bbbid,\n            recordingid: getDataFromAction(element, 'recordingid'),\n            action: elementData.action,\n        };\n\n        if (element.dataset.requireConfirmation == \"1\") {\n            // Create the confirmation dialogue.\n            const confirm = new M.core.confirm({\n                modal: true,\n                centered: true,\n                question: 'Are you sure?', // Old: this.recordingConfirmationMessage(payload).\n            });\n\n            // If it is confirmed.\n            return new Promise(function(resolve) {\n                confirm.on('complete-yes', function() {\n                    resolve(repository.updateRecording(payload));\n                }, this);\n                confirm.on('complete-no', function() {\n                    resolve();\n                }, this);\n            });\n        } else {\n            return repository.updateRecording(payload);\n        }\n    };\n\n    /**\n     * Process an action event.\n     *\n     * @param   {Event} e\n     */\n    const processAction = e => {\n        const popoutLink = e.target.closest('a[data-href]');\n        if (popoutLink) {\n            e.preventDefault();\n\n            const videoPlayer = window.open('', '_blank');\n            videoPlayer.opener = null;\n            videoPlayer.location.href = popoutLink.dataset.href;\n\n            // TODO repository.viewRecording(args); .\n\n            return;\n        }\n\n        // Fetch any clicked anchor.\n        const clickedLink = e.target.closest('a[data-action]');\n        if (clickedLink) {\n            e.preventDefault();\n\n            // Create a spinning icon on the table.\n            const iconPromise = addIconToContainerWithPromise(dataTable.get('boundingBox').getDOMNode());\n\n            requestAction(clickedLink)\n            .then(updateTableFromResponse)\n            .catch(displayException)\n\n            // Always resolve the iconPromise.\n            .then(iconPromise.resolve)\n            .catch();\n\n            return;\n        }\n    };\n\n    const processSearchSubmission = e => {\n        // Prevent the default action.\n        e.preventDefault();\n\n        filterByText(e.target.elements.searchtext.value);\n    };\n\n    const processSearchReset = () => {\n        filterByText('');\n    };\n\n    const registerEventListeners = () => {\n        // Add event listeners to the table boundingBox.\n        const boundingBox = dataTable.get('boundingBox').getDOMNode();\n        boundingBox.addEventListener('click', processAction);\n\n        // Setup the search from handlers.\n        const searchForm = document.querySelector(selectors.searchForm);\n        if (searchForm) {\n            searchForm.addEventListener('submit', processSearchSubmission);\n            searchForm.addEventListener('reset', processSearchReset);\n        }\n    };\n\n    return {\n        filterByText,\n        refreshTableData,\n        registerEventListeners,\n    };\n};\n\n/**\n * Setup the data table for the specified BBB instance.\n *\n * @param   {number} bbbid The instance of the BBB CM.\n * @param   {object} response The response from the data request\n * @returns {Promise}\n */\nconst setupDatatable = (bbbid, response) => {\n    if (!response) {\n        return Promise.resolve();\n    }\n\n    if (!response.status) {\n        // Something failed. Continue to show the plain output.\n        return Promise.resolve();\n    }\n\n    const recordingData = response.tabledata;\n\n    if (recordingData.recordings_html) {\n        // Use the plain HTML view.\n        // Note: In the future this option will be removed when the reliance upon the YUI DataTable is removed.\n        return Promise.resolve();\n    }\n\n    let showRecordings = recordingData.profile_features.indexOf('all') !== -1;\n    showRecordings = showRecordings || recordingData.profile_features.indexOf('showrecordings') !== -1;\n    if (!showRecordings) {\n        // TODO: This should be handled by the web service.\n        // This user is not allowed to view recordings.\n        return Promise.resolve();\n    }\n\n    return new Promise(function(resolve) {\n        // eslint-disable-next-line\n        YUI({\n            lang: recordingData.locale,\n        }).use('intl', 'datatable', 'datatable-sort', 'datatable-paginator', 'datatype-number', Y => {\n            initYuiLanguage(Y)\n            .then(() => {\n                const tableData = getFormattedData(response);\n\n                const dataTable = new Y.DataTable({\n                    width: \"1195px\",\n                    columns: recordingData.columns,\n                    data: tableData,\n                    rowsPerPage: 3,\n                    paginatorLocation: ['header', 'footer']\n                });\n                dataTable.set('currentData', dataTable.get('data'));\n                dataTable.set('currentFilter', '');\n\n                return dataTable;\n            })\n            .then(resolve)\n            .catch();\n        });\n    })\n    .then(dataTable => {\n        dataTable.render(selectors.table);\n        const {registerEventListeners} = getDataTableFunctions(bbbid, dataTable);\n        registerEventListeners();\n\n        return dataTable;\n    });\n};\n\n/**\n * Initialise recordings code.\n *\n * @method init\n * @param {object} params\n * @param {Number} params.bbbid The BBB instanceid.\n */\nexport const init = ({\n    bbbid,\n} = {}) => {\n    repository.fetchRecordings(bbbid)\n    .then(response => setupDatatable(bbbid, response))\n    .catch(displayException);\n};\n"],"file":"recordings.min.js"}